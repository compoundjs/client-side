{"name":"co-client","tagline":"Client-side features for CompoundJS MVC framework","body":"## Client-side features for CompoundJS\r\n\r\nThis package adds number of client-side features to\r\n[CompoundJS MVC](http://compoundjs.com). To get idea of client-side compound\r\nsee how GitHub works when you browsing repository: every page could\r\nbe loaded as html, but when you navigate through pages by clicking links, it\r\ndoesn't reloads page. It's like pjax, but without pjax: everything rendered and\r\nserved on client.\r\n\r\n## Installation\r\n\r\nStep 1. install using npm:\r\n\r\n    npm install co-client --save\r\n\r\nStep 2. add `co-client` line to config/autoload.js, for example:\r\n\r\n```javascript\r\nmodule.exports = function (compound) {\r\n    return typeof window === 'undefined' ? [\r\n        'ejs-ext',\r\n        'jugglingdb',\r\n        'seedjs',\r\n        'co-client'\r\n    ].map(require) : [\r\n        // some client-side modules\r\n    ];\r\n};\r\n```\r\n\r\n## Usage\r\n\r\nWork with compoundjs as usual, bundle will created on server startup. To rebuild\r\nbundle on file modification use `compound g cs --watch` command.\r\n\r\nOne important note: this module uses <%- contentFor('javascripts') %> section of\r\napplication layout. If you want to use client-side compound in existing app you\r\nshould add following line to end of your\r\napp/views/layouts/application_layout.js:\r\n\r\n    <%- contentFor('javascripts') %>\r\n\r\n## CLI features\r\n\r\n### Bundle generator\r\n\r\n    compound generate clientside\r\n\r\nor, using shortcuts\r\n\r\n    compound g cs\r\n\r\nThis generator creates bundle which consists of framework, application and all\r\ndependencies. This bundle saved as `public/javascripts/compound.js` file, it\r\nshould be included on client.\r\n\r\n### Watch for changes\r\n\r\nGenerator can stay alive and look for changes in application code and rebuild\r\nbundle if it called with `--watch` flag.\r\n\r\n    compound g cs --watch\r\n\r\n### ORM\r\n\r\nClient-Side Compound comes with JugglingDB ORM, which works well on client-side,\r\nbut for persistence it still talk to server using JSON API, provided by controller.\r\n\r\nIf you don't need persistence, just tell compound to use another schema driver (by\r\ndefault used WebServiceAdapter). Config example:\r\n\r\n    app.set('schema adapter', require('jugglingdb/lib/adapters/memory'));\r\n\r\nIt will force JugglingDB to use in-memory storage, which is not persistent. Feel free\r\nto write your own adapter if you have some API for your client-side app.\r\n\r\n### Client-Side Controllers\r\n\r\nSame controller serves both HTML and JSON requests, more than that: same controller works\r\non client-side.\r\n\r\n### Routing\r\n\r\nUse regular compound routing to tell framework, which controller#action should respond to\r\nrequest on given path. One addition to routes. Every route now have `pushState` param which\r\nallows to specify, is it necessary to populate browser's history when serving this action.\r\nBy default `pushState: true`, that means every click and form submission will update location\r\nand history. Use `pushState: false` to disable this behavior:\r\n\r\n    app.get('#displayAlert', 'clientSideConrtoller#alert', {pushState: false});\r\n\r\n### More awesome stuff coming soon...\r\n\r\n## License (MIT)\r\n\r\n```text\r\nCopyright (C) 2011 by Anatoliy Chakkaev <mail [åt] anatoliy [døt] in>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}